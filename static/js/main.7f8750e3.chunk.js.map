{"version":3,"sources":["serviceWorker.js","components/ComfirmableButton.js","views/Users.js","views/Speakers.js","components/SpeakerChip.js","views/Schedule.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","ComfirmableButton","message","children","onSubmit","other","useState","open","setOpen","IconButton","key","onClick","Dialog","fullWidth","disableBackdropClick","disableEscapeKeyDown","DialogTitle","id","DialogContent","dividers","DialogActions","Button","color","useStyles","makeStyles","theme","root","width","marginTop","spacing","overflowX","marginBottom","fab","position","bottom","right","Users","users","classes","useCollection","usersSnapshot","loading","error","CircularProgress","style","top","left","toString","Typography","variant","UsersTable","rows","docs","onRemove","user","admin","doc","delete","onActivate","isActive","update","AddUserDialog","onClose","add","Fab","className","Paper","Table","TableHead","TableRow","TableCell","component","align","TableBody","map","row","data","scope","displayName","email","disabled","Switch","checked","onChange","event","target","type","Grid","container","justify","alignItems","TextField","margin","label","handleChange","FormControl","InputLabel","htmlFor","Select","native","inputProps","name","defaultValue","value","flexGrow","bio","height","overflow","avatar","Speakers","speakers","storage","speaker","state","setState","speakersSnapshot","SpeakersGrid","onEdit","EditSpeakerDialog","old","onUpdate","set","item","xs","md","Card","CardHeader","Avatar","alt","src","photo","title","CardContent","CardActions","disableSpacing","marginLeft","Photo","url","multiline","uploadRef","setPhoto","ref","display","e","file","files","child","put","then","snapshot","getDownloadURL","handleClick","click","SpeakerChip","props","Chip","Schedule","slots","slot","orderBy","slotsSnapshot","slotLoading","slotsError","speakersLoading","speakersError","SlotsTable","EditSlotDialog","start","Date","parse","end","orderedRows","sort","a","b","order","size","minWidth","format","locale","pl","slotSpeaker","speakerId","find","it","marginRight","shrink","NativeSelect","input","Input","min","TabPanel","index","role","hidden","Box","p","App","db","setValue","Tabs","centered","Tab","collection","firebase","initializeApp","projectId","apiKey","authDomain","storageBucket","ReactDOM","render","CssBaseline","firestore","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f8750e3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function ComfirmableButton({ message, children, onSubmit, ...other }) {\n    const [open, setOpen] = useState(false);\n    return [\n        <IconButton key=\"button\" onClick={() => setOpen(true)} {...other}>{children}</IconButton>,\n        <Dialog fullWidth key=\"confirmation\" disableBackdropClick disableEscapeKeyDown open={open}>\n            <DialogTitle id=\"confirmation-dialog-title\">Confirmation</DialogTitle>\n            <DialogContent dividers>\n                <p>{message}</p>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setOpen(false)} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={() => {\n                    onSubmit();\n                    setOpen(false);\n                }} color=\"primary\">\n                    Ok\n                </Button>\n            </DialogActions>\n        </Dialog>]\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from \"@material-ui/core\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Switch from \"@material-ui/core/Switch\";\nimport ComfirmableButton from \"../components/ComfirmableButton\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n        overflowX: 'auto',\n        marginBottom: theme.spacing(10)\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(3),\n        right: theme.spacing(3),\n    },\n}));\n\nexport default function Users({ users }) {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [usersSnapshot, loading, error] = useCollection(users);\n    if (loading) return <CircularProgress style={{ position: 'absolute', top: '50%', left: '50%' }}/>;\n    if (error) return <p>ERROR: {error.toString()}</p>;\n    return [\n        <Typography key=\"title\" variant=\"h5\">Edit users</Typography>,\n        <UsersTable key=\"table\" rows={usersSnapshot.docs} onRemove={handleRemove} onActivate={handleActivation}/>,\n        <AddUserDialog key=\"add-user\" open={open} onClose={handleClose} onSubmit={handleSubmit}/>,\n        <Fab key=\"action\" onClick={() => setOpen(true)} className={classes.fab} color=\"secondary\"><AddIcon/></Fab>,\n    ];\n\n    function handleClose() {\n        setOpen(false);\n    }\n\n    function handleSubmit(user) {\n        users.add({ ...user, isActive: true });\n        setOpen(false);\n    }\n\n    function handleRemove(user) {\n        if (!user.admin) users.doc(user.id).delete();\n    }\n\n    function handleActivation(user, isActive) {\n        users.doc(user.id).update({ isActive })\n    }\n}\n\nfunction UsersTable({ rows, onRemove, onActivate }) {\n    const classes = useStyles();\n    return (\n        <Paper className={classes.root}>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell component=\"th\">Name</TableCell>\n                        <TableCell component=\"th\">Email</TableCell>\n                        <TableCell component=\"th\">Actions</TableCell>\n                        <TableCell component=\"th\" align=\"right\">Active</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => {\n                        const user = { id: row.id, ...row.data() };\n                        return (\n                            <TableRow key={user.id}>\n                                <TableCell scope=\"row\">{user.displayName}</TableCell>\n                                <TableCell scope=\"row\">{user.email}</TableCell>\n                                <TableCell scope=\"row\">\n                                    <ComfirmableButton disabled={user.admin} onSubmit={() => onRemove(user)}\n                                                       message={`Do you really want to remove ${user.displayName}?`}>\n                                        <DeleteIcon/>\n                                    </ComfirmableButton>\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    <Switch checked={user.isActive}\n                                            onChange={(event) => onActivate(user, event.target.checked)}/>\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nfunction AddUserDialog({ open, onClose, onSubmit }) {\n    const user = {\n        type: 'REGULAR'\n    };\n    return <Dialog open={open} onClose={onClose} fullWidth>\n        <DialogTitle>Add User</DialogTitle>\n        <DialogContent>\n            <Grid container justify=\"center\" alignItems=\"center\">\n                <TextField margin=\"dense\" label=\"name\" type=\"text\" fullWidth onChange={handleChange('displayName')}/>\n                <TextField margin=\"dense\" label=\"email\" type=\"email\" fullWidth onChange={handleChange('email')}/>\n                <FormControl fullWidth>\n                    <InputLabel htmlFor=\"user-type\">type</InputLabel>\n                    <Select native inputProps={{ name: 'type', id: 'user-type' }} onChange={handleChange('type')} defaultValue={user.type}>\n                        <option value={'REGULAR'}>Regular</option>\n                        <option value={'STAFF'}>Staff</option>\n                        <option value={'SPEAKER'}>Speaker</option>\n                    </Select>\n                </FormControl>\n            </Grid>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onClose} color=\"primary\">Cancel</Button>\n            <Button onClick={() => onSubmit(user)} color=\"primary\">Save</Button>\n        </DialogActions>\n    </Dialog>;\n\n    function handleChange(name) {\n        return (event) => user[name] = event.target.value\n    }\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from \"@material-ui/core\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FaceIcon from '@material-ui/icons/Face';\nimport AddIcon from '@material-ui/icons/Add';\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from \"@material-ui/core/Fab\";\nimport ComfirmableButton from \"../components/ComfirmableButton\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(3),\n        flexGrow: 1,\n        marginBottom: theme.spacing(10)\n    },\n    bio: {\n        height: '175px',\n        overflow: 'auto'\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(3),\n        right: theme.spacing(3),\n    },\n    avatar: {\n        width: 128,\n        height: 128\n    }\n}));\n\nexport default function Speakers({ speakers, storage }) {\n    const classes = useStyles();\n    const [state, setState] = useState({ open: false, speaker: {} });\n    const [speakersSnapshot, loading, error] = useCollection(speakers);\n    if (loading) return <CircularProgress style={{ position: 'absolute', top: '50%', left: '50%' }}/>;\n    if (error) return <p>ERROR: {error.toString()}</p>;\n    return [\n        <Typography key=\"title\" variant=\"h5\">Edit speakers</Typography>,\n        <SpeakersGrid key=\"grid\" rows={speakersSnapshot.docs} onEdit={handleEdit} onRemove={handleRemove}/>,\n        <EditSpeakerDialog key=\"edit-speaker\" speaker={state.speaker} open={state.open} onClose={handleClose}\n                           onUpdate={handleUpdate} storage={storage}/>,\n        <Fab key=\"action\" onClick={() => setState({ open: true, speaker: {} })} className={classes.fab}\n             color=\"secondary\"><AddIcon/></Fab>\n    ];\n\n    function handleEdit(speaker) {\n        setState({ open: true, speaker });\n    }\n\n    function handleClose() {\n        setState((old) => ({ ...old, open: false }));\n    }\n\n    function handleUpdate(speaker) {\n        if (speaker.id) {\n            speakers.doc(speaker.id).set(speaker);\n        } else {\n            speakers.add(speaker);\n        }\n        setState((old) => ({ ...old, open: false }));\n    }\n\n    function handleRemove(speaker) {\n        speakers.doc(speaker.id).delete();\n    }\n}\n\nfunction SpeakersGrid({ rows, onEdit, onRemove }) {\n    const classes = useStyles();\n    return <div className={classes.root}>\n        <Grid container spacing={3}>\n            {rows.map(row => {\n                const speaker = { id: row.id, ...row.data() };\n                return <Grid item xs={12} md={4} key={speaker.id}>\n                    <Card>\n                        <CardHeader avatar={<Avatar alt={speaker.name} src={speaker.photo}/>} title={speaker.name}/>\n                        <CardContent className={classes.bio}>\n                            <Typography variant=\"caption\" color=\"textSecondary\" component=\"p\">{speaker.bio}</Typography>\n                        </CardContent>\n                        <CardActions disableSpacing>\n                            <IconButton style={{ marginLeft: 'auto' }} onClick={() => onEdit(speaker)}>\n                                <EditIcon/>\n                            </IconButton>\n                            <ComfirmableButton onSubmit={() => onRemove(speaker)}\n                                               message={`Do you really want to remove ${speaker.name}?`}>\n                                <DeleteIcon/>\n                            </ComfirmableButton>\n                        </CardActions>\n                    </Card>\n                </Grid>\n            })}\n        </Grid>\n    </div>;\n}\n\nfunction EditSpeakerDialog({ speaker, open, onClose, onUpdate, storage }) {\n    return <Dialog open={open} onClose={onClose} fullWidth>\n        <DialogTitle>{speaker.name ? \"Edit Speaker\" : \"Add Speaker\"}</DialogTitle>\n        <DialogContent>\n            <Grid container justify=\"center\" alignItems=\"center\">\n                <Photo speaker={speaker} storage={storage} onUpdate={(url) => speaker.photo = url}/>\n                <TextField margin=\"dense\" label=\"name\" type=\"text\" fullWidth defaultValue={speaker.name}\n                           onChange={handleChange('name')}/>\n                <TextField multiline margin=\"dense\" label=\"bio\" type=\"text\" fullWidth defaultValue={speaker.bio}\n                           onChange={handleChange('bio')}/>\n            </Grid>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onClose} color=\"primary\">Cancel</Button>\n            <Button onClick={() => onUpdate(speaker)} color=\"primary\">Save</Button>\n        </DialogActions>\n    </Dialog>;\n\n    function handleChange(name) {\n        return (event) => speaker[name] = event.target.value\n    }\n}\n\nfunction Photo({ speaker, storage, onUpdate }) {\n    const classes = useStyles();\n    const [photo, setPhoto] = useState(speaker.photo);\n    let uploadRef;\n    const input = <input key=\"file\" type=\"file\" ref={(ref) => uploadRef = ref} style={{ display: 'none' }}\n                         onChange={handleUpload}/>;\n    const avatar = photo ?\n        <Avatar key=\"avatar\" onClick={handleClick} alt={speaker.name} src={speaker.photo} className={classes.avatar}/> :\n        <Avatar key=\"avatar\" onClick={handleClick} alt={speaker.name} className={classes.avatar}>\n            <FaceIcon className={classes.avatar}/>\n        </Avatar>;\n    return [input, avatar];\n\n    function handleClick() {\n        uploadRef.click();\n    }\n\n    function handleUpload(e) {\n        const file = e.target.files[0];\n        storage.child(file.name).put(file)\n            .then(snapshot => snapshot.ref.getDownloadURL())\n            .then(url => {\n                onUpdate(url);\n                setPhoto(url);\n            });\n    }\n}\n","import Chip from \"@material-ui/core/Chip\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FaceIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\nimport React from \"react\";\n\nexport default function SpeakerChip({ speaker, ...props }) {\n    return <Chip\n        avatar={speaker.photo ? <Avatar src={speaker.photo}/> : <Avatar><FaceIcon/></Avatar>}\n        label={speaker.name}\n        {...props}\n    />\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from \"@material-ui/core\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from \"@material-ui/core/Fab\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { format } from 'date-fns';\nimport { pl } from 'date-fns/locale';\nimport SpeakerChip from \"../components/SpeakerChip\";\nimport ComfirmableButton from \"../components/ComfirmableButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Input from \"@material-ui/core/Input\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(3),\n        flexGrow: 1,\n        marginBottom: theme.spacing(10)\n    },\n    bio: {\n        height: '175px',\n        overflow: 'auto'\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(3),\n        right: theme.spacing(3),\n    },\n    avatar: {\n        width: 128,\n        height: 128\n    }\n}));\n\nexport default function Schedule({ slots, speakers }) {\n    const classes = useStyles();\n    const [state, setState] = useState({ open: false, slot: {} });\n    const [slotsSnapshot, slotLoading, slotsError] = useCollection(slots.orderBy('start'));\n    const [speakersSnapshot, speakersLoading, speakersError] = useCollection(speakers);\n    if (slotLoading || speakersLoading) return <CircularProgress\n        style={{ position: 'absolute', top: '50%', left: '50%' }}/>;\n    if (slotsError || speakersError) return <p>ERROR: {slotsError.toString() + speakersError.toString()}</p>;\n    return [\n        <Typography key=\"title\" variant=\"h5\">Edit schedule</Typography>,\n        <SlotsTable key=\"table\" rows={slotsSnapshot.docs} speakers={speakersSnapshot.docs} onEdit={handleEdit}\n                    onRemove={handleRemove}/>,\n        <EditSlotDialog key=\"edit-slot\" slot={state.slot} open={state.open} onClose={handleClose}\n                        onUpdate={handleUpdate}/>,\n        <Fab key=\"action\" onClick={() => setState((old) => ({ open: true, slot: {} }))} className={classes.fab}\n             color=\"secondary\"><AddIcon/></Fab>\n    ];\n\n    function handleEdit(slot) {\n        setState({ open: true, slot });\n    }\n\n    function handleClose() {\n        setState((old) => ({ ...old, open: false }));\n    }\n\n    function handleUpdate(slot) {\n        slot.start = Date.parse(slot.start);\n        slot.end = Date.parse(slot.end);\n        if (slot.id) {\n            slots.doc(slot.id).set(slot);\n        } else {\n            slots.add(slot);\n        }\n        setState((old) => ({ ...old, open: false }));\n    }\n\n    function handleRemove(slot) {\n        slots.doc(slot.id).delete();\n    }\n}\n\nfunction SlotsTable({ rows, speakers, onEdit, onRemove }) {\n    const classes = useStyles();\n    const orderedRows = rows.sort((a, b) => {\n        const timeComparison = a.start - b.start;\n        return timeComparison || ((a.order || 0) - (b.order || 0));\n    });\n    return (\n        <Paper className={classes.root}>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell component=\"th\">Day</TableCell>\n                        <TableCell component=\"th\">Start</TableCell>\n                        <TableCell component=\"th\">End</TableCell>\n                        <TableCell component=\"th\">Type</TableCell>\n                        <TableCell component=\"th\">Order</TableCell>\n                        <TableCell component=\"th\">Title</TableCell>\n                        <TableCell component=\"th\" style={{ minWidth: 400 }}>Speakers</TableCell>\n                        <TableCell style={{ minWidth: 145 }} component=\"th\">Actions</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {orderedRows.map(row => {\n                        const slot = { id: row.id, ...row.data() };\n                        return (\n                            <TableRow key={slot.id}>\n                                <TableCell\n                                    scope=\"row\">{format(new Date(slot.start), 'EEEE', { locale: pl })}</TableCell>\n                                <TableCell\n                                    scope=\"row\">{format(new Date(slot.start), 'H:mm:ss', { locale: pl })}</TableCell>\n                                <TableCell\n                                    scope=\"row\">{format(new Date(slot.end), 'H:mm:ss', { locale: pl })}</TableCell>\n                                <TableCell scope=\"row\">{slot.type}</TableCell>\n                                <TableCell scope=\"row\">{slot.order}</TableCell>\n                                <TableCell scope=\"row\">{slot.title}</TableCell>\n                                <TableCell\n                                    scope=\"row\">{renderSpeakers(slot.speakers)}</TableCell>\n                                <TableCell>\n                                    <IconButton onClick={() => onEdit(slot)}><EditIcon/></IconButton>\n                                    <ComfirmableButton onSubmit={() => onRemove(slot)}\n                                                       message={`Do you really want to remove ${slot.title}?`}>\n                                        <DeleteIcon/>\n                                    </ComfirmableButton>\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n\n    function renderSpeakers(slotSpeakers) {\n        return slotSpeakers\n            .map(slotSpeaker => slotSpeaker.id)\n            .map(speakerId => speakers.find(it => it.id === speakerId))\n            .map(speaker => <SpeakerChip key={speaker.id} speaker={speaker.data()} style={{ marginRight: 10 }}/>);\n    }\n}\n\nfunction EditSlotDialog({ slot, open, onClose, onUpdate }) {\n    const start = slot.start ? new Date(slot.start) : new Date();\n    const end = slot.end ? new Date(slot.end) : new Date();\n    return <Dialog open={open} onClose={onClose} fullWidth>\n        <DialogTitle>{slot.title ? \"Edit Slot\" : \"Add Slot\"}</DialogTitle>\n        <DialogContent>\n            <TextField margin=\"dense\" label=\"title\" type=\"text\" fullWidth defaultValue={slot.title}\n                       onChange={handleChange('title')}/>\n            <TextField margin=\"dense\" label=\"start\" type=\"datetime-local\" fullWidth\n                       defaultValue={format(start, 'yyyy-MM-dd\\'T\\'HH:mm', { locale: pl })}\n                       onChange={handleChange('start')}/>\n            <TextField margin=\"dense\" label=\"end\" type=\"datetime-local\" fullWidth\n                       defaultValue={format(end, 'yyyy-MM-dd\\'T\\'HH:mm', { locale: pl })}\n                       onChange={handleChange('end')}/>\n            <FormControl margin=\"dense\" fullWidth>\n                <InputLabel shrink>type</InputLabel>\n                <NativeSelect defaultValue={slot.type} input={<Input onChange={handleChange('type')}/>}>\n                    <option value=\"TALK\">TALK</option>\n                    <option value=\"TECHNICAL\">TECHNICAL</option>\n                    <option value=\"LIGHTNING\">LIGHTNING</option>\n                </NativeSelect>\n            </FormControl>\n            <TextField margin=\"dense\" label=\"order\" type=\"number\" fullWidth defaultValue={slot.order}\n                       onChange={handleChange('order')} inputProps={{ min: 0 }}/>\n            <TextField margin=\"dense\" label=\"speakers\" type=\"text\" fullWidth defaultValue={slot.speakers}\n                       onChange={handleChange('speakers')}/>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onClose} color=\"primary\">Cancel</Button>\n            <Button onClick={() => onUpdate(slot)} color=\"primary\">Save</Button>\n        </DialogActions>\n    </Dialog>;\n\n    function handleChange(name) {\n        return (event) => slot[name] = event.target.value\n    }\n}\n","import React, { useState } from 'react';\nimport AppBar from \"@material-ui/core/AppBar/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Users from \"./views/Users\";\nimport Speakers from \"./views/Speakers\";\nimport Schedule from \"./views/Schedule\";\n\nfunction App({ db, storage }) {\n    const [value, setValue] = useState(0);\n    return [\n        <AppBar position=\"static\" key=\"appbar\">\n            <Tabs component=\"div\" value={value} centered variant=\"fullWidth\" onChange={(e, index) => setValue(index)}>\n                <Tab label=\"Users\"/>\n                <Tab label=\"Speakers\"/>\n                <Tab label=\"Schedule\"/>\n            </Tabs>\n        </AppBar>,\n        <TabPanel value={value} index={0} key=\"usersTab\">\n            <Users users={db.collection('users')}/>\n        </TabPanel>,\n        <TabPanel value={value} index={1} key=\"speakersTab\">\n            <Speakers speakers={db.collection('speakers')} storage={storage.ref()}/>\n        </TabPanel>,\n        <TabPanel value={value} index={2} key=\"scheduleTab\">\n            <Schedule slots={db.collection('schedule')} speakers={db.collection('speakers')}/>\n        </TabPanel>\n    ];\n}\n\nfunction TabPanel({ children, value, index }) {\n    return (\n        <Typography component=\"section\" role=\"tabpanel\" hidden={value !== index}>\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nimport \"firebase/messaging\";\nimport firebase from \"firebase/app\";\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nfirebase.initializeApp({\n    projectId: \"atm-voting\",\n    apiKey: \"AIzaSyDwGFsr2F-ju_u162LengdX2BeGZ_Bh4Xw\",\n    authDomain: \"firebase-adminsdk-99hyc@atm-voting.iam.gserviceaccount.com\",\n    storageBucket: \"atm-voting.appspot.com\"\n});\n\nReactDOM.render([\n    <CssBaseline key=\"css\"/>,\n    <App key=\"app\" db={firebase.firestore()} storage={firebase.storage()}/>\n], document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}